Description: >
  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.
  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.
  Finally, it deploys a pair of example ECS services from containers published in
  Amazon EC2 Container Registry (Amazon ECR).
  Author: Ahmed Magdy

Parameters:

  S3TemplateKeyPrefix:
    Description: location of templates that are used to build the infrastructure
    Type: String
    Default: https://ahmed-ecs-cloudformation.s3.eu-west-2.amazonaws.com/infrastructure/

  EnvironmentName:
    Description: An environment name that will be used all over solution arch
    Type: String

  ContainerName:
    Description: Please enter a container name for your Application
    Type: String

  RepositoryName:
    Description: The name of the ECR repository
    Type: String

Resources:

  ImageRepository:
    Type: AWS::CloudFormation::Stack
    Properties:
        TemplateURL: !Sub ${S3TemplateKeyPrefix}image-repository.yaml
        Parameters:
            RepositoryName: !Ref RepositoryName

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${S3TemplateKeyPrefix}vpc.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.10.0/24
        PublicSubnet2CIDR: 10.180.20.0/24
        PrivateSubnet1CIDR: 10.180.30.0/24
        PrivateSubnet2CIDR: 10.180.40.0/24

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${S3TemplateKeyPrefix}security-groups.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${S3TemplateKeyPrefix}load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  EcsCluster:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}ecs-cluster.yaml
            Parameters:
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                EnvironmentName: !Ref EnvironmentName
                VPC: !GetAtt VPC.Outputs.VPC
                Listener: !GetAtt ALB.Outputs.Listener
                ECSServicesSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                ContainerName: !Ref ContainerName
